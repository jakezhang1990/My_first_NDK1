apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.myndk1"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
//                abiFilters "armeabi-v7a"  //设置abi过滤，指定本地库的CPU架构，也就是native-lib这个本地库，如果不指定native-lib则会把各个架构下的库都生成一个。
                                    // 在apk中只会存在这一个架构的so包。但是这个配置对其他的第三方库并不生效，只能对本地的库做CPU架构的过滤。
                                    //第三方库怎么过滤呢？
            }
        }

        /*ndk{//第三方库的CPU架构的过滤在这里设置。
            abiFilters "armeabi-v7a"  //指定预编译的第三方库的CPU架构
        }*/

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation files('libs/fmod.jar')
}
